/*------------------------------------*\
    #TOOLS.MIXINS
\*------------------------------------*/

@mixin cover() {
  background-repeat   : no-repeat;
  background-size     : cover;
  background-position : center;
}

@mixin contain() {
  background-repeat   : no-repeat;
  background-size     : contain;
  background-position : center;

}

@mixin clearfix() {
  &:before,
  &:after {
    content : " ";
    display : table;
  }
  &:after {
    clear : both;
  }
}

@mixin vertical-align($position: relative) {
  position  : $position;
  top       : 50%;
  transform : translateY(-50%);
}

@mixin horizontal-align($position: relative) {
  position  : $position;
  left      : 50%;
  transform : translateX(-50%);
}

@mixin retinaImage1point5($imageLocation, $twoXImageLocation, $width, $height) {
  background-image  : url($imageLocation);
  background-repeat : no-repeat;

  @media only screen and (-webkit-min-device-pixel-ratio : 1.5),
  only screen and (min--moz-device-pixel-ratio : 1.5),
  only screen and (-o-min-device-pixel-ratio : 2/1),
  only screen and (min-device-pixel-ratio : 1.5),
  only screen and (min-resolution : 192dpi),
  only screen and (min-resolution : 2dppx) {
    background-image : url($twoXImageLocation) !important;
    background-size  : $width $height;
  }
}

// Generic responsive Mixin
// --------------------------------------------------
@mixin responsive($attr, $xs: null, $sm: null, $md: null, $lg: null, $xl: null, $xxl: null) {

  #{$attr}: $xs;

  @if $sm {
    @media screen and (min-width : 480px) {
      #{$attr}: $sm;
    }
  }
  @if $md {
    @media screen and (min-width : $screen-sm) {
      #{$attr}: $md;
    }
  }
  @if $lg {
    @media screen and (min-width : $screen-md) {
      #{$attr}: $lg;
    }
  }
  @if $xl {
    @media screen and (min-width : $screen-lg) {
      #{$attr}: $xl;
    }
  }
  @if $xxl {
    @media screen and (min-width : 1550px) {
      #{$attr}: $xxl;
    }
  }
}

// Button variants
// --------------------------------------------------

@mixin button-variant($color, $background, $border, $hover-color: $color, $hover-background: darken($background, 10%), $hover-border: darken($background, 10%)) {

  color            : $color;
  background-color : $background;
  border-color     : $border;

  &:hover {
    color            : $hover-color;
    background-color : $hover-background;
    border-color     : $hover-border;
  }
}

// Button sizes
// --------------------------------------------------

@mixin placeholder($color) {
  &::-webkit-input-placeholder {
    color : $color;
  }

  &:-moz-placeholder { /* Firefox 18- */
    color : $color;
  }

  &::-moz-placeholder { /* Firefox 19+ */
    color : $color;
  }

  &:-ms-input-placeholder {
    color : $color;
  }
}